package com.swust.kelab.service;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.common.collect.Lists;
import com.swust.kelab.domain.Alert;
import com.swust.kelab.domain.AlertConfig;
import com.swust.kelab.model.CommonQuery;
import com.swust.kelab.model.ConfigAlertModel;
import com.swust.kelab.model.PageData;
import com.swust.kelab.model.QueryData;
import com.swust.kelab.repos.AlertConfigDAO;
import com.swust.kelab.repos.bean.ListQuery;
import com.swust.kelab.util.PageHandle;
@Service("alertConfigService")
public class AlertConfigService {
	@Autowired
	private AlertConfigDAO alertConfigDAO;
	private List<ConfigAlertModel> configList;
	
	/**
	 * @description 增加一个告警配置
	 * @param alertConfig
	 * @return
	 */
	public int addOneAlertConfig(AlertConfig alertConfig){
		return alertConfigDAO.addOneAlertConfig(alertConfig);
	}
	/**
	 * @description 删除一条告警设置以及与其对应的告警
	 * @param alertConfigID
	 * @return
	 */
	public int deleteOneAlertConfig(int alertConfigID) {
		int flag = alertConfigDAO.deleteAlerts(alertConfigID);
		System.out.println("deleteAlertflag:"+flag);
		return alertConfigDAO.deleteOneAlertConfig(alertConfigID);
	}
	
	
	/**
	 * @description 分页查询当前用户的告警配置
	 * @param query
	 * @param pageNumber
	 * @param userID
	 * @return
	 */
	public QueryData queryBypage(CommonQuery query, Integer pageNumber, Integer userID) {
		QueryData result = new QueryData();
		int totalPage = 0;
		ListQuery queryMap = query.format();
		queryMap.fill("userID", userID);
		System.out.println("userID:" + userID);
	
		//查询告警配置的数量
		int totalCount = alertConfigDAO.countConfigNum(queryMap);
		System.out.println("totalCount:" + totalCount);
		
		if(query.getRecordPerPage()<=0){
			query.setRecordPerPage(5);
		}
		
		if(query.getPageArray()==null&&pageNumber!=null){
			query.setPageArray(new int[]{pageNumber});
		}else{
			query.setPageArray(new int[]{1});
		}
		
		//查询的起始位置和长度
		int startIndex = (pageNumber-1)*query.getRecordPerPage();
		int endIndex = query.getRecordPerPage();
		queryMap.fill("startIndex", startIndex);
		queryMap.fill("maxCount", endIndex);
		System.out.println("startIndex:"+startIndex+"\nmaxCount:"+endIndex);
		
		//查询符合条件的告警配置
		configList = alertConfigDAO.queryConfigs(queryMap);
		System.out.println("configListSize:" + configList.size());
		
		//对每个告警配置进行查询告警操作并编号
		int objId = startIndex;
		Iterator configIter = configList.iterator();	
		while(configIter.hasNext()){
			ConfigAlertModel config = (ConfigAlertModel) configIter.next();
			config.setObjId(++objId);
			int configID = config.getAlertConfigID();
			System.out.println("configID:" + configID);
			List<Alert> alertList = new ArrayList<Alert>();
			alertList = alertConfigDAO.queryAlertList(configID);
			config.setAlertList(alertList);
		}
		result.setTotalCount(totalCount);
		totalPage = QueryData.computeTotalPage(totalCount, query.getRecordPerPage());
		result.setTotalPage(totalPage);
		List<PageData> pageDataList = Lists.newArrayList();
		return PageHandle.initialQueryData(result, pageDataList, query, configList, totalPage);
	}
	
}
