package com.swust.kelab.web.controller;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.swust.kelab.model.CommonQuery;
import com.swust.kelab.model.ObjModel;
import com.swust.kelab.model.QueryData;
import com.swust.kelab.service.LocationQueryService;
import com.swust.kelab.web.json.JsonAndView;


@Controller
@RequestMapping("/locationQuery")
public class LocationQueryController {
	@Autowired
	private LocationQueryService locationQueryService;
	private static final Integer DEFAULT_LOCCOUNT = 20;
	private static final Integer DEFAULT_PAGENUMBER = 1;
	
	/**
	 * @description 分页查询对象和位置信息 
	 * @param objm
	 * @param query
	 * @param pageNumber
	 * @return
	 */
	@RequestMapping(value="/queryByPage",method=RequestMethod.GET)
	public JsonAndView query(ObjModel objm, CommonQuery query, Integer pageNumber, Integer locCount){
		JsonAndView jv = new JsonAndView();
		try{
			System.out.println("controller page:"+pageNumber+"\nrecordPerPage:"
					+query.getRecordPerPage());
			if(locCount==null || locCount <= 0){
				locCount = DEFAULT_LOCCOUNT;
			}
			if(pageNumber==null || pageNumber <= 0){
				pageNumber = DEFAULT_PAGENUMBER;
			}
			if(query.getRecordPerPage() <= 0){
				query.setRecordPerPage(6);
			}
			QueryData result = locationQueryService.queryBypage(objm, query, pageNumber, locCount);
			if(result == null){
				jv.setRet(false);
				jv.setErrcode(1);
				jv.setErrmsg("null");
			}else{
				jv.addData("totalPage",result.getTotalPage());
				jv.addData("totalCount", result.getTotalCount());
				jv.addData("items", result.getPageData());
			}
		}catch(Exception e){
			
		}	
		return jv;	
	}
	
	/**
	 * @description 分页查询地理位置
	 * @param locCount
	 * @param locPageNum
	 * @param objId
	 * @return List<LocationSimple>
	 */
	@RequestMapping(value="/queryLocByPage",method=RequestMethod.GET)
	public JsonAndView queryLocationByPage(Integer locCount, Integer locPageNum, Integer objId){
		CommonQuery query = new CommonQuery();
		if(locCount == null || locCount <= 0){
			locCount = DEFAULT_LOCCOUNT;
		}
		query.setRecordPerPage(locCount);
		JsonAndView jv = new JsonAndView();
		if(locPageNum == null || locPageNum <= 0){
			locPageNum = DEFAULT_PAGENUMBER;
		}
		try{
			QueryData result = locationQueryService.queryLocationByPage(query, locPageNum, objId);
			if(result == null){
				jv.setRet(false);
				jv.setErrcode(1);
				jv.setErrmsg("object is not found");
			}else{
				jv.addData("totalPage",result.getTotalPage());
				jv.addData("totalCount", result.getTotalCount());
				jv.addData("items", result.getPageData());
			}
		}catch(Exception e){
			
		}	
		return jv;	
	}
	
}
