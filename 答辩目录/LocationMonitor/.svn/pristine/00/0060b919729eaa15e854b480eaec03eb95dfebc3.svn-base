define(function (require, exports, module) {
    var $$map_model = require('../map_query/map_model');
    var template = require('artTemplate');
    var map = {
        init: function () {
            // 百度地图API功能
            var mp = new BMap.Map("myMap");    // 创建Map实例
            mp.centerAndZoom(new BMap.Point(104.686547,31.484749), 12);          // 设置地图显示的城市 此项是必须设置的
            this.marker(mp);
        },
        marker: function (mp) {
            // 复杂的自定义覆盖物
            function ComplexCustomOverlay(point, cfg){
                this._point = point;
                this._cfg = cfg;
            }

            ComplexCustomOverlay.prototype = new BMap.Overlay();

            ComplexCustomOverlay.prototype.initialize = function(map){
                var self = this,
                    cfg = this._cfg;

                this._map = map;
                var contentTpl = '<div style="margin:0;line-height:20px;padding:2px;">' +
                    '地址：{{area}}<br/>电话：{{phone}}<br/>IMEI：{{IMEI}}<br/>IMSI：{{IMSI}}' +
                    '<br/>时间：{{time}}' +
                    '</div>';
                var render = template.compile(contentTpl);
                html = render(cfg.data);
                //创建检索信息窗口对象
                var searchInfoWindow = null;
                searchInfoWindow = new BMapLib.SearchInfoWindow(map, html, {
                    title  : cfg.data.name,      //标题
                    width  : 290,             //宽度
                    height : 105,              //高度
                    panel  : "panel",         //检索结果面板
                    enableAutoPan : true,     //自动平移
                    searchTypes   :[
                        BMAPLIB_TAB_SEARCH,   //周边检索
                        BMAPLIB_TAB_TO_HERE,  //到这里去
                        BMAPLIB_TAB_FROM_HERE //从这里出发
                    ]
                });
                var overlayStyle = {
                    background: 'url("../img/markers.png")',
                    width: '22px',
                    height: '29px',
                    fontSize: '15px',
                    position: 'absolute',
                    color: '#fff',
                    whiteSpace: 'pre-wrap',
                    zIndex: BMap.Overlay.getZIndex(this._point.lat)
                };
                var div = this._div = document.createElement("div");
                div.id = 'marker' + cfg.data.ObjId;
                div.appendChild(document.createTextNode(' ' + this._cfg.index));
                for (var key in overlayStyle) {
                    if (overlayStyle.hasOwnProperty(key)) {
                        div.style[key] = overlayStyle[key];
                    }
                }

                div.addEventListener("click", function(e){
                    searchInfoWindow.open(self._point);
                })

                div.onmouseover = function(){
                    div.style.backgroundPosition = '0 -34px';
                }

                div.onmouseout = function(){
                    div.style.backgroundPosition = '0 0';
                }

                mp.getPanes().labelPane.appendChild(div);
                return div;
            }

            ComplexCustomOverlay.prototype.draw = function(){
                var map = this._map;
                var pixel = map.pointToOverlayPixel(this._point);
                this._div.style.left = pixel.x - 14 + "px";
                this._div.style.top  = pixel.y - 17 + "px";
            }

            var myCompOverlay = new ComplexCustomOverlay(new BMap.Point(104.686547,31.484749));

            $$map_model.on('change:list', function () {
                var data = this.get('list'),
                    cfg = {};
                _.each(data.items, function(val, index) {
                    cfg.index = index + 1;
                    cfg.data = val;
                    myCompOverlay = new ComplexCustomOverlay(new BMap.Point(val.longitude,val.latitude), cfg);
                    mp.addOverlay(myCompOverlay);
                });
            });
        }
    };
    module.exports = map;
});
